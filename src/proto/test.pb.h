// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/test.proto

#ifndef PROTOBUF_proto_2ftest_2eproto__INCLUDED
#define PROTOBUF_proto_2ftest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2ftest_2eproto();
void protobuf_AssignDesc_proto_2ftest_2eproto();
void protobuf_ShutdownFile_proto_2ftest_2eproto();

class CustomPayload;
class Position;
class Route;

// ===================================================================

class CustomPayload : public ::google::protobuf::Message {
 public:
  CustomPayload();
  virtual ~CustomPayload();

  CustomPayload(const CustomPayload& from);

  inline CustomPayload& operator=(const CustomPayload& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomPayload& default_instance();

  void Swap(CustomPayload* other);

  // implements Message ----------------------------------------------

  CustomPayload* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CustomPayload& from);
  void MergeFrom(const CustomPayload& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:CustomPayload)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* data_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2ftest_2eproto();
  friend void protobuf_AssignDesc_proto_2ftest_2eproto();
  friend void protobuf_ShutdownFile_proto_2ftest_2eproto();

  void InitAsDefaultInstance();
  static CustomPayload* default_instance_;
};
// -------------------------------------------------------------------

class Position : public ::google::protobuf::Message {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();

  void Swap(Position* other);

  // implements Message ----------------------------------------------

  Position* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // required double x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline double x() const;
  inline void set_x(double value);

  // required double y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline double y() const;
  inline void set_y(double value);

  // required double z = 4;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 4;
  inline double z() const;
  inline void set_z(double value);

  // @@protoc_insertion_point(class_scope:Position)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 time_;
  double x_;
  double y_;
  double z_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2ftest_2eproto();
  friend void protobuf_AssignDesc_proto_2ftest_2eproto();
  friend void protobuf_ShutdownFile_proto_2ftest_2eproto();

  void InitAsDefaultInstance();
  static Position* default_instance_;
};
// -------------------------------------------------------------------

class Route : public ::google::protobuf::Message {
 public:
  Route();
  virtual ~Route();

  Route(const Route& from);

  inline Route& operator=(const Route& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Route& default_instance();

  void Swap(Route* other);

  // implements Message ----------------------------------------------

  Route* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Route& from);
  void MergeFrom(const Route& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated .Position positions = 2;
  inline int positions_size() const;
  inline void clear_positions();
  static const int kPositionsFieldNumber = 2;
  inline const ::Position& positions(int index) const;
  inline ::Position* mutable_positions(int index);
  inline ::Position* add_positions();
  inline const ::google::protobuf::RepeatedPtrField< ::Position >&
      positions() const;
  inline ::google::protobuf::RepeatedPtrField< ::Position >*
      mutable_positions();

  // @@protoc_insertion_point(class_scope:Route)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Position > positions_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2ftest_2eproto();
  friend void protobuf_AssignDesc_proto_2ftest_2eproto();
  friend void protobuf_ShutdownFile_proto_2ftest_2eproto();

  void InitAsDefaultInstance();
  static Route* default_instance_;
};
// ===================================================================


// ===================================================================

// CustomPayload

// required int32 id = 1;
inline bool CustomPayload::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CustomPayload::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CustomPayload::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CustomPayload::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CustomPayload::id() const {
  return id_;
}
inline void CustomPayload::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required bytes data = 2;
inline bool CustomPayload::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CustomPayload::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CustomPayload::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CustomPayload::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& CustomPayload::data() const {
  return *data_;
}
inline void CustomPayload::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void CustomPayload::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void CustomPayload::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CustomPayload::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* CustomPayload::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CustomPayload::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Position

// required int64 time = 1;
inline bool Position::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Position::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Position::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Position::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 Position::time() const {
  return time_;
}
inline void Position::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// required double x = 2;
inline bool Position::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Position::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Position::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Position::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double Position::x() const {
  return x_;
}
inline void Position::set_x(double value) {
  set_has_x();
  x_ = value;
}

// required double y = 3;
inline bool Position::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Position::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Position::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Position::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double Position::y() const {
  return y_;
}
inline void Position::set_y(double value) {
  set_has_y();
  y_ = value;
}

// required double z = 4;
inline bool Position::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Position::set_has_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Position::clear_has_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Position::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline double Position::z() const {
  return z_;
}
inline void Position::set_z(double value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// Route

// required int32 id = 1;
inline bool Route::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Route::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Route::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Route::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Route::id() const {
  return id_;
}
inline void Route::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated .Position positions = 2;
inline int Route::positions_size() const {
  return positions_.size();
}
inline void Route::clear_positions() {
  positions_.Clear();
}
inline const ::Position& Route::positions(int index) const {
  return positions_.Get(index);
}
inline ::Position* Route::mutable_positions(int index) {
  return positions_.Mutable(index);
}
inline ::Position* Route::add_positions() {
  return positions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Position >&
Route::positions() const {
  return positions_;
}
inline ::google::protobuf::RepeatedPtrField< ::Position >*
Route::mutable_positions() {
  return &positions_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2ftest_2eproto__INCLUDED
